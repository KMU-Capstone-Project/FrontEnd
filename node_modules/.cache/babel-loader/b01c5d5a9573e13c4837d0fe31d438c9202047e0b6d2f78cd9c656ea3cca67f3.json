{"ast":null,"code":"var _jsxFileName = \"/Users/hayoon/Desktop/capcode/src/pages/chatPage/chatPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport '../../css/chatPage/chatPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst dummyRooms = [{\n  id: 1,\n  name: '찢어진 정장',\n  owner: '김철수',\n  image: '/product.png',\n  status: '대여중',\n  scheduleDate: '',\n  schedulePlace: '',\n  messages: [{\n    id: 1,\n    user: '상대',\n    text: '네, 판매 중입니다.',\n    time: '2025-05-02T13:24:00',\n    isMe: false\n  }, {\n    id: 2,\n    user: '나',\n    text: '내일 직거래 가능할까요?',\n    time: '2025-05-03T13:25:00',\n    isMe: true\n  }]\n}];\nfunction ChatPage() {\n  _s();\n  const navigate = useNavigate();\n  const [rooms, setRooms] = useState(dummyRooms);\n  const [currentRoomId, setCurrentRoomId] = useState(1);\n  const [messages, setMessages] = useState(dummyRooms[0].messages);\n  const [input, setInput] = useState('');\n  const [files, setFiles] = useState([]);\n  const [showScheduleForm, setShowScheduleForm] = useState(false);\n  const [scheduleDate, setScheduleDate] = useState('');\n  const [schedulePlace, setSchedulePlace] = useState('');\n  const fileRef = useRef();\n  const scrollRef = useRef();\n  const currentRoom = rooms.find(r => r.id === currentRoomId);\n  useEffect(() => {\n    const updatedRoom = rooms.find(r => r.id === currentRoomId);\n    if (updatedRoom) setMessages(updatedRoom.messages);\n  }, [currentRoomId, rooms]);\n  useEffect(() => {\n    var _scrollRef$current;\n    (_scrollRef$current = scrollRef.current) === null || _scrollRef$current === void 0 ? void 0 : _scrollRef$current.scrollIntoView({\n      behavior: 'smooth'\n    });\n  }, [messages]);\n  const formatDateLabel = isoString => {\n    const date = new Date(isoString);\n    return `${date.getFullYear()}년 ${String(date.getMonth() + 1).padStart(2, '0')}월 ${String(date.getDate()).padStart(2, '0')}일`;\n  };\n  const formatTime = isoString => {\n    const date = new Date(isoString);\n    const hours = date.getHours();\n    const minutes = String(date.getMinutes()).padStart(2, '0');\n    const isAM = hours < 12;\n    const formattedHour = hours % 12 || 12;\n    return `${isAM ? '오전' : '오후'} ${formattedHour}:${minutes}`;\n  };\n  const shouldShowDate = (current, previous) => {\n    const currDate = new Date(current).toDateString();\n    const prevDate = previous ? new Date(previous).toDateString() : null;\n    return currDate !== prevDate;\n  };\n  const handleSend = () => {\n    if (!input.trim() && files.length === 0) return;\n    const now = new Date();\n    const newMessages = [];\n    if (input.trim()) {\n      newMessages.push({\n        id: messages.length + newMessages.length + 1,\n        user: '나',\n        text: input,\n        image: null,\n        time: now.toISOString(),\n        isMe: true\n      });\n    }\n    if (files.length) {\n      newMessages.push(...files.map((f, i) => ({\n        id: messages.length + newMessages.length + i + 1,\n        user: '나',\n        text: null,\n        image: URL.createObjectURL(f),\n        time: now.toISOString(),\n        isMe: true\n      })));\n    }\n    const updatedRooms = rooms.map(room => room.id === currentRoomId ? {\n      ...room,\n      messages: [...room.messages, ...newMessages]\n    } : room);\n    setRooms(updatedRooms);\n    setMessages(prev => [...prev, ...newMessages]);\n    setInput('');\n    setFiles([]);\n  };\n  const handleKeyDown = e => {\n    if (e.key === 'Enter') handleSend();\n  };\n  const handleStatusChange = e => {\n    const newStatus = e.target.value;\n    const now = new Date();\n    const statusMessage = {\n      id: messages.length + 1,\n      user: '시스템',\n      text: `\"${currentRoom.name}\"의 상태가 \"${newStatus}\"(으)로 변경되었습니다.`,\n      time: now.toISOString(),\n      isMe: false\n    };\n    const updatedRooms = rooms.map(room => room.id === currentRoomId ? {\n      ...room,\n      status: newStatus,\n      messages: [...room.messages, statusMessage]\n    } : room);\n    setRooms(updatedRooms);\n    setMessages(updatedRooms.find(r => r.id === currentRoomId).messages);\n  };\n  const handleScheduleSubmit = () => {\n    if (!scheduleDate || !schedulePlace) {\n      alert('날짜와 장소를 입력하세요.');\n      return;\n    }\n    const now = new Date();\n    const encodedPlace = encodeURIComponent(schedulePlace);\n    const mapUrl = `https://www.google.com/maps?q=${encodedPlace}&output=embed`;\n    const formattedDateTime = scheduleDate.replace('T', ' ').slice(0, 16);\n    const scheduleMessage = {\n      id: messages.length + 1,\n      user: '나',\n      map: mapUrl,\n      scheduleDateTime: formattedDateTime,\n      schedulePlace: schedulePlace,\n      time: now.toISOString(),\n      isMe: true\n    };\n    const systemMessage = {\n      id: messages.length + 2,\n      user: '시스템',\n      text: `\"${currentRoom.name}\"의 상태가 \"예약중\"으로 자동 변경되었습니다.`,\n      time: now.toISOString(),\n      isMe: false\n    };\n    const updatedRooms = rooms.map(room => room.id === currentRoomId ? {\n      ...room,\n      messages: [...room.messages, scheduleMessage, systemMessage],\n      scheduleDate,\n      schedulePlace,\n      status: '예약중'\n    } : room);\n    setRooms(updatedRooms);\n    setMessages(updatedRooms.find(r => r.id === currentRoomId).messages);\n    setShowScheduleForm(false);\n    setScheduleDate('');\n    setSchedulePlace('');\n  };\n  const handleScheduleDelete = () => {\n    const now = new Date();\n    const systemMessages = [{\n      id: messages.length + 1,\n      user: '시스템',\n      text: '일정이 삭제되었습니다.',\n      time: now.toISOString(),\n      isMe: false\n    }, {\n      id: messages.length + 2,\n      user: '시스템',\n      text: `\"${currentRoom.name}\"의 상태가 \"대여중\"으로 자동 변경되었습니다.`,\n      time: now.toISOString(),\n      isMe: false\n    }];\n    const updatedRooms = rooms.map(room => room.id === currentRoomId ? {\n      ...room,\n      messages: [...room.messages.filter(msg => !msg.map), ...systemMessages],\n      scheduleDate: '',\n      schedulePlace: '',\n      status: '대여중'\n    } : room);\n    setRooms(updatedRooms);\n    setMessages(updatedRooms.find(r => r.id === currentRoomId).messages);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatpage-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main-logo\",\n        onClick: () => navigate('/main'),\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"black\",\n          children: \"SPOT\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"light animated\",\n          children: \"LIGHT\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 46\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 9\n      }, this), rooms.map(room => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `chat-room ${room.id === currentRoomId ? 'active' : ''}`,\n        onClick: () => setCurrentRoomId(room.id),\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: room.owner\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 42\n        }, this), room.name, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 24\n        }, this), \"\\uC0C1\\uD0DC: \", room.status]\n      }, room.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-main\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: currentRoom.image,\n          alt: \"\\uC0C1\\uD488\",\n          className: \"product-img\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"owner\",\n            children: currentRoom.owner\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"title\",\n            children: currentRoom.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 13\n          }, this), currentRoom.scheduleDate && currentRoom.schedulePlace && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"schedule\",\n            children: [\"\\uD83D\\uDCC5 \", currentRoom.scheduleDate.replace('T', ' ').slice(0, 16), \" \\xB7 \\uD83D\\uDCCD \", currentRoom.schedulePlace, /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleScheduleDelete,\n              children: \"\\u274C \\uC0AD\\uC81C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"status-buttons\",\n          children: ['대여중', '예약중', '대여완료'].map(status => /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleStatusChange({\n              target: {\n                value: status\n              }\n            }),\n            className: currentRoom.status === status ? 'active' : '',\n            children: status\n          }, status, false, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-messages\",\n        children: [messages.map((msg, idx) => {\n          const prevMsg = idx > 0 ? messages[idx - 1] : null;\n          const nextMsg = idx < messages.length - 1 ? messages[idx + 1] : null;\n          const showDate = shouldShowDate(msg.time, prevMsg === null || prevMsg === void 0 ? void 0 : prevMsg.time);\n          const isLastOfTimeGroup = !nextMsg || formatTime(nextMsg.time) !== formatTime(msg.time);\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [showDate && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"date-label\",\n              children: formatDateLabel(msg.time)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 30\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `message ${msg.isMe ? 'me' : 'other'}`,\n              children: [msg.text && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text\",\n                children: msg.text\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 278,\n                columnNumber: 32\n              }, this), msg.image && /*#__PURE__*/_jsxDEV(\"img\", {\n                src: msg.image,\n                alt: \"\\uCCA8\\uBD80\",\n                className: \"image\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 279,\n                columnNumber: 33\n              }, this), msg.map && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"map-container\",\n                children: [/*#__PURE__*/_jsxDEV(\"iframe\", {\n                  title: \"\\uC9C0\\uB3C4\",\n                  src: msg.map,\n                  allowFullScreen: true,\n                  loading: \"lazy\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 282,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"map-info\",\n                  children: [\"\\uD83D\\uDCC5 \", msg.scheduleDateTime, \" \\xB7 \\uD83D\\uDCCD \", msg.schedulePlace]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 283,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 281,\n                columnNumber: 21\n              }, this), isLastOfTimeGroup && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"timestamp\",\n                children: formatTime(msg.time)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 286,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 277,\n              columnNumber: 17\n            }, this)]\n          }, msg.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 15\n          }, this);\n        }), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: scrollRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 9\n      }, this), showScheduleForm && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"schedule-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"datetime-local\",\n          value: scheduleDate,\n          onChange: e => setScheduleDate(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: schedulePlace,\n          placeholder: \"\\uC7A5\\uC18C \\uC785\\uB825\",\n          onChange: e => setSchedulePlace(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleScheduleSubmit,\n          children: \"\\uB4F1\\uB85D\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-input\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowScheduleForm(prev => !prev),\n          children: \"\\uD83D\\uDCC5\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: input,\n          placeholder: \"\\uBA54\\uC2DC\\uC9C0 \\uC785\\uB825\",\n          onChange: e => setInput(e.target.value),\n          onKeyDown: handleKeyDown\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => fileRef.current.click(),\n          children: \"\\uD83D\\uDCF7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          ref: fileRef,\n          style: {\n            display: 'none'\n          },\n          multiple: true,\n          onChange: e => {\n            const selected = Array.from(e.target.files);\n            if (selected.length) setFiles(selected);\n            fileRef.current.value = null;\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSend,\n          children: \"\\uC804\\uC1A1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 228,\n    columnNumber: 5\n  }, this);\n}\n_s(ChatPage, \"hj39lj6Yj7iw/PjfbQmxHhrojVc=\", false, function () {\n  return [useNavigate];\n});\n_c = ChatPage;\nexport default ChatPage;\nvar _c;\n$RefreshReg$(_c, \"ChatPage\");","map":{"version":3,"names":["React","useState","useRef","useEffect","useNavigate","jsxDEV","_jsxDEV","dummyRooms","id","name","owner","image","status","scheduleDate","schedulePlace","messages","user","text","time","isMe","ChatPage","_s","navigate","rooms","setRooms","currentRoomId","setCurrentRoomId","setMessages","input","setInput","files","setFiles","showScheduleForm","setShowScheduleForm","setScheduleDate","setSchedulePlace","fileRef","scrollRef","currentRoom","find","r","updatedRoom","_scrollRef$current","current","scrollIntoView","behavior","formatDateLabel","isoString","date","Date","getFullYear","String","getMonth","padStart","getDate","formatTime","hours","getHours","minutes","getMinutes","isAM","formattedHour","shouldShowDate","previous","currDate","toDateString","prevDate","handleSend","trim","length","now","newMessages","push","toISOString","map","f","i","URL","createObjectURL","updatedRooms","room","prev","handleKeyDown","e","key","handleStatusChange","newStatus","target","value","statusMessage","handleScheduleSubmit","alert","encodedPlace","encodeURIComponent","mapUrl","formattedDateTime","replace","slice","scheduleMessage","scheduleDateTime","systemMessage","handleScheduleDelete","systemMessages","filter","msg","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","idx","prevMsg","nextMsg","showDate","isLastOfTimeGroup","title","allowFullScreen","loading","ref","type","onChange","placeholder","onKeyDown","click","style","display","multiple","selected","Array","from","_c","$RefreshReg$"],"sources":["/Users/hayoon/Desktop/capcode/src/pages/chatPage/chatPage.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport '../../css/chatPage/chatPage.css';\n\nconst dummyRooms = [\n  {\n    id: 1,\n    name: '찢어진 정장',\n    owner: '김철수',\n    image: '/product.png',\n    status: '대여중',\n    scheduleDate: '',\n    schedulePlace: '',\n    messages: [\n      {\n        id: 1,\n        user: '상대',\n        text: '네, 판매 중입니다.',\n        time: '2025-05-02T13:24:00',\n        isMe: false\n      },\n      {\n        id: 2,\n        user: '나',\n        text: '내일 직거래 가능할까요?',\n        time: '2025-05-03T13:25:00',\n        isMe: true\n      }\n    ]\n  }\n];\n\nfunction ChatPage() {\n  const navigate = useNavigate();\n  const [rooms, setRooms] = useState(dummyRooms);\n  const [currentRoomId, setCurrentRoomId] = useState(1);\n  const [messages, setMessages] = useState(dummyRooms[0].messages);\n  const [input, setInput] = useState('');\n  const [files, setFiles] = useState([]);\n  const [showScheduleForm, setShowScheduleForm] = useState(false);\n  const [scheduleDate, setScheduleDate] = useState('');\n  const [schedulePlace, setSchedulePlace] = useState('');\n  const fileRef = useRef();\n  const scrollRef = useRef();\n\n  const currentRoom = rooms.find(r => r.id === currentRoomId);\n\n  useEffect(() => {\n    const updatedRoom = rooms.find(r => r.id === currentRoomId);\n    if (updatedRoom) setMessages(updatedRoom.messages);\n  }, [currentRoomId, rooms]);\n\n  useEffect(() => {\n    scrollRef.current?.scrollIntoView({ behavior: 'smooth' });\n  }, [messages]);\n\n  const formatDateLabel = (isoString) => {\n    const date = new Date(isoString);\n    return `${date.getFullYear()}년 ${String(date.getMonth() + 1).padStart(2, '0')}월 ${String(date.getDate()).padStart(2, '0')}일`;\n  };\n\n  const formatTime = (isoString) => {\n    const date = new Date(isoString);\n    const hours = date.getHours();\n    const minutes = String(date.getMinutes()).padStart(2, '0');\n    const isAM = hours < 12;\n    const formattedHour = hours % 12 || 12;\n    return `${isAM ? '오전' : '오후'} ${formattedHour}:${minutes}`;\n  };\n\n  const shouldShowDate = (current, previous) => {\n    const currDate = new Date(current).toDateString();\n    const prevDate = previous ? new Date(previous).toDateString() : null;\n    return currDate !== prevDate;\n  };\n\n  const handleSend = () => {\n    if (!input.trim() && files.length === 0) return;\n\n    const now = new Date();\n    const newMessages = [];\n\n    if (input.trim()) {\n      newMessages.push({\n        id: messages.length + newMessages.length + 1,\n        user: '나',\n        text: input,\n        image: null,\n        time: now.toISOString(),\n        isMe: true\n      });\n    }\n\n    if (files.length) {\n      newMessages.push(\n        ...files.map((f, i) => ({\n          id: messages.length + newMessages.length + i + 1,\n          user: '나',\n          text: null,\n          image: URL.createObjectURL(f),\n          time: now.toISOString(),\n          isMe: true\n        }))\n      );\n    }\n\n    const updatedRooms = rooms.map(room =>\n      room.id === currentRoomId\n        ? { ...room, messages: [...room.messages, ...newMessages] }\n        : room\n    );\n\n    setRooms(updatedRooms);\n    setMessages(prev => [...prev, ...newMessages]);\n    setInput('');\n    setFiles([]);\n  };\n\n  const handleKeyDown = (e) => {\n    if (e.key === 'Enter') handleSend();\n  };\n\n  const handleStatusChange = (e) => {\n    const newStatus = e.target.value;\n    const now = new Date();\n    const statusMessage = {\n      id: messages.length + 1,\n      user: '시스템',\n      text: `\"${currentRoom.name}\"의 상태가 \"${newStatus}\"(으)로 변경되었습니다.`,\n      time: now.toISOString(),\n      isMe: false\n    };\n\n    const updatedRooms = rooms.map(room =>\n      room.id === currentRoomId\n        ? { ...room, status: newStatus, messages: [...room.messages, statusMessage] }\n        : room\n    );\n\n    setRooms(updatedRooms);\n    setMessages(updatedRooms.find(r => r.id === currentRoomId).messages);\n  };\n\n  const handleScheduleSubmit = () => {\n    if (!scheduleDate || !schedulePlace) {\n      alert('날짜와 장소를 입력하세요.');\n      return;\n    }\n\n    const now = new Date();\n    const encodedPlace = encodeURIComponent(schedulePlace);\n    const mapUrl = `https://www.google.com/maps?q=${encodedPlace}&output=embed`;\n    const formattedDateTime = scheduleDate.replace('T', ' ').slice(0, 16);\n\n    const scheduleMessage = {\n      id: messages.length + 1,\n      user: '나',\n      map: mapUrl,\n      scheduleDateTime: formattedDateTime,\n      schedulePlace: schedulePlace,\n      time: now.toISOString(),\n      isMe: true\n    };\n\n    const systemMessage = {\n      id: messages.length + 2,\n      user: '시스템',\n      text: `\"${currentRoom.name}\"의 상태가 \"예약중\"으로 자동 변경되었습니다.`,\n      time: now.toISOString(),\n      isMe: false\n    };\n\n    const updatedRooms = rooms.map(room =>\n      room.id === currentRoomId\n        ? {\n            ...room,\n            messages: [...room.messages, scheduleMessage, systemMessage],\n            scheduleDate,\n            schedulePlace,\n            status: '예약중'\n          }\n        : room\n    );\n\n    setRooms(updatedRooms);\n    setMessages(updatedRooms.find(r => r.id === currentRoomId).messages);\n    setShowScheduleForm(false);\n    setScheduleDate('');\n    setSchedulePlace('');\n  };\n\n  const handleScheduleDelete = () => {\n    const now = new Date();\n    const systemMessages = [\n      {\n        id: messages.length + 1,\n        user: '시스템',\n        text: '일정이 삭제되었습니다.',\n        time: now.toISOString(),\n        isMe: false\n      },\n      {\n        id: messages.length + 2,\n        user: '시스템',\n        text: `\"${currentRoom.name}\"의 상태가 \"대여중\"으로 자동 변경되었습니다.`,\n        time: now.toISOString(),\n        isMe: false\n      }\n    ];\n\n    const updatedRooms = rooms.map(room =>\n      room.id === currentRoomId\n        ? {\n            ...room,\n            messages: [...room.messages.filter(msg => !msg.map), ...systemMessages],\n            scheduleDate: '',\n            schedulePlace: '',\n            status: '대여중'\n          }\n        : room\n    );\n\n    setRooms(updatedRooms);\n    setMessages(updatedRooms.find(r => r.id === currentRoomId).messages);\n  };\n\n  return (\n    <div className=\"chatpage-container\">\n      <div className=\"chat-sidebar\">\n        <div className=\"main-logo\" onClick={() => navigate('/main')}>\n          <span className=\"black\">SPOT</span><span className=\"light animated\">LIGHT</span>\n        </div>\n        {rooms.map(room => (\n          <div key={room.id} className={`chat-room ${room.id === currentRoomId ? 'active' : ''}`}\n            onClick={() => setCurrentRoomId(room.id)}>\n            <strong>{room.owner}</strong><br />\n            {room.name}<br />\n            상태: {room.status}\n          </div>\n        ))}\n      </div>\n\n      <div className=\"chat-main\">\n        <div className=\"chat-header\">\n          <img src={currentRoom.image} alt=\"상품\" className=\"product-img\" />\n          <div className=\"chat-info\">\n            <div className=\"owner\">{currentRoom.owner}</div>\n            <div className=\"title\">{currentRoom.name}</div>\n            {currentRoom.scheduleDate && currentRoom.schedulePlace && (\n              <div className=\"schedule\">\n                📅 {currentRoom.scheduleDate.replace('T', ' ').slice(0, 16)} · 📍 {currentRoom.schedulePlace}\n                <button onClick={handleScheduleDelete}>❌ 삭제</button>\n              </div>\n            )}\n          </div>\n          <div className=\"status-buttons\">\n            {['대여중', '예약중', '대여완료'].map(status => (\n              <button key={status}\n                onClick={() => handleStatusChange({ target: { value: status } })}\n                className={currentRoom.status === status ? 'active' : ''}>\n                {status}\n              </button>\n            ))}\n          </div>\n        </div>\n\n        <div className=\"chat-messages\">\n          {messages.map((msg, idx) => {\n            const prevMsg = idx > 0 ? messages[idx - 1] : null;\n            const nextMsg = idx < messages.length - 1 ? messages[idx + 1] : null;\n            const showDate = shouldShowDate(msg.time, prevMsg?.time);\n            const isLastOfTimeGroup = !nextMsg || formatTime(nextMsg.time) !== formatTime(msg.time);\n\n            return (\n              <div key={msg.id}>\n                {showDate && <div className=\"date-label\">{formatDateLabel(msg.time)}</div>}\n                <div className={`message ${msg.isMe ? 'me' : 'other'}`}>\n                  {msg.text && <div className=\"text\">{msg.text}</div>}\n                  {msg.image && <img src={msg.image} alt=\"첨부\" className=\"image\" />}\n                  {msg.map && (\n                    <div className=\"map-container\">\n                      <iframe title=\"지도\" src={msg.map} allowFullScreen loading=\"lazy\" />\n                      <div className=\"map-info\">📅 {msg.scheduleDateTime} · 📍 {msg.schedulePlace}</div>\n                    </div>\n                  )}\n                  {isLastOfTimeGroup && <div className=\"timestamp\">{formatTime(msg.time)}</div>}\n                </div>\n              </div>\n            );\n          })}\n          <div ref={scrollRef} />\n        </div>\n\n        {showScheduleForm && (\n          <div className=\"schedule-form\">\n            <input type=\"datetime-local\" value={scheduleDate} onChange={(e) => setScheduleDate(e.target.value)} />\n            <input type=\"text\" value={schedulePlace} placeholder=\"장소 입력\" onChange={(e) => setSchedulePlace(e.target.value)} />\n            <button onClick={handleScheduleSubmit}>등록</button>\n          </div>\n        )}\n\n        <div className=\"chat-input\">\n          <button onClick={() => setShowScheduleForm(prev => !prev)}>📅</button>\n          <input type=\"text\" value={input} placeholder=\"메시지 입력\" onChange={(e) => setInput(e.target.value)} onKeyDown={handleKeyDown} />\n          <button onClick={() => fileRef.current.click()}>📷</button>\n          <input type=\"file\" ref={fileRef} style={{ display: 'none' }} multiple\n            onChange={(e) => {\n              const selected = Array.from(e.target.files);\n              if (selected.length) setFiles(selected);\n              fileRef.current.value = null;\n            }} />\n          <button onClick={handleSend}>전송</button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default ChatPage;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AAC1D,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAO,iCAAiC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzC,MAAMC,UAAU,GAAG,CACjB;EACEC,EAAE,EAAE,CAAC;EACLC,IAAI,EAAE,QAAQ;EACdC,KAAK,EAAE,KAAK;EACZC,KAAK,EAAE,cAAc;EACrBC,MAAM,EAAE,KAAK;EACbC,YAAY,EAAE,EAAE;EAChBC,aAAa,EAAE,EAAE;EACjBC,QAAQ,EAAE,CACR;IACEP,EAAE,EAAE,CAAC;IACLQ,IAAI,EAAE,IAAI;IACVC,IAAI,EAAE,aAAa;IACnBC,IAAI,EAAE,qBAAqB;IAC3BC,IAAI,EAAE;EACR,CAAC,EACD;IACEX,EAAE,EAAE,CAAC;IACLQ,IAAI,EAAE,GAAG;IACTC,IAAI,EAAE,eAAe;IACrBC,IAAI,EAAE,qBAAqB;IAC3BC,IAAI,EAAE;EACR,CAAC;AAEL,CAAC,CACF;AAED,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAClB,MAAMC,QAAQ,GAAGlB,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACmB,KAAK,EAAEC,QAAQ,CAAC,GAAGvB,QAAQ,CAACM,UAAU,CAAC;EAC9C,MAAM,CAACkB,aAAa,EAAEC,gBAAgB,CAAC,GAAGzB,QAAQ,CAAC,CAAC,CAAC;EACrD,MAAM,CAACc,QAAQ,EAAEY,WAAW,CAAC,GAAG1B,QAAQ,CAACM,UAAU,CAAC,CAAC,CAAC,CAACQ,QAAQ,CAAC;EAChE,MAAM,CAACa,KAAK,EAAEC,QAAQ,CAAC,GAAG5B,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAAC6B,KAAK,EAAEC,QAAQ,CAAC,GAAG9B,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAAC+B,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGhC,QAAQ,CAAC,KAAK,CAAC;EAC/D,MAAM,CAACY,YAAY,EAAEqB,eAAe,CAAC,GAAGjC,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACa,aAAa,EAAEqB,gBAAgB,CAAC,GAAGlC,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAMmC,OAAO,GAAGlC,MAAM,CAAC,CAAC;EACxB,MAAMmC,SAAS,GAAGnC,MAAM,CAAC,CAAC;EAE1B,MAAMoC,WAAW,GAAGf,KAAK,CAACgB,IAAI,CAACC,CAAC,IAAIA,CAAC,CAAChC,EAAE,KAAKiB,aAAa,CAAC;EAE3DtB,SAAS,CAAC,MAAM;IACd,MAAMsC,WAAW,GAAGlB,KAAK,CAACgB,IAAI,CAACC,CAAC,IAAIA,CAAC,CAAChC,EAAE,KAAKiB,aAAa,CAAC;IAC3D,IAAIgB,WAAW,EAAEd,WAAW,CAACc,WAAW,CAAC1B,QAAQ,CAAC;EACpD,CAAC,EAAE,CAACU,aAAa,EAAEF,KAAK,CAAC,CAAC;EAE1BpB,SAAS,CAAC,MAAM;IAAA,IAAAuC,kBAAA;IACd,CAAAA,kBAAA,GAAAL,SAAS,CAACM,OAAO,cAAAD,kBAAA,uBAAjBA,kBAAA,CAAmBE,cAAc,CAAC;MAAEC,QAAQ,EAAE;IAAS,CAAC,CAAC;EAC3D,CAAC,EAAE,CAAC9B,QAAQ,CAAC,CAAC;EAEd,MAAM+B,eAAe,GAAIC,SAAS,IAAK;IACrC,MAAMC,IAAI,GAAG,IAAIC,IAAI,CAACF,SAAS,CAAC;IAChC,OAAO,GAAGC,IAAI,CAACE,WAAW,CAAC,CAAC,KAAKC,MAAM,CAACH,IAAI,CAACI,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,KAAKF,MAAM,CAACH,IAAI,CAACM,OAAO,CAAC,CAAC,CAAC,CAACD,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,GAAG;EAC9H,CAAC;EAED,MAAME,UAAU,GAAIR,SAAS,IAAK;IAChC,MAAMC,IAAI,GAAG,IAAIC,IAAI,CAACF,SAAS,CAAC;IAChC,MAAMS,KAAK,GAAGR,IAAI,CAACS,QAAQ,CAAC,CAAC;IAC7B,MAAMC,OAAO,GAAGP,MAAM,CAACH,IAAI,CAACW,UAAU,CAAC,CAAC,CAAC,CAACN,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;IAC1D,MAAMO,IAAI,GAAGJ,KAAK,GAAG,EAAE;IACvB,MAAMK,aAAa,GAAGL,KAAK,GAAG,EAAE,IAAI,EAAE;IACtC,OAAO,GAAGI,IAAI,GAAG,IAAI,GAAG,IAAI,IAAIC,aAAa,IAAIH,OAAO,EAAE;EAC5D,CAAC;EAED,MAAMI,cAAc,GAAGA,CAACnB,OAAO,EAAEoB,QAAQ,KAAK;IAC5C,MAAMC,QAAQ,GAAG,IAAIf,IAAI,CAACN,OAAO,CAAC,CAACsB,YAAY,CAAC,CAAC;IACjD,MAAMC,QAAQ,GAAGH,QAAQ,GAAG,IAAId,IAAI,CAACc,QAAQ,CAAC,CAACE,YAAY,CAAC,CAAC,GAAG,IAAI;IACpE,OAAOD,QAAQ,KAAKE,QAAQ;EAC9B,CAAC;EAED,MAAMC,UAAU,GAAGA,CAAA,KAAM;IACvB,IAAI,CAACvC,KAAK,CAACwC,IAAI,CAAC,CAAC,IAAItC,KAAK,CAACuC,MAAM,KAAK,CAAC,EAAE;IAEzC,MAAMC,GAAG,GAAG,IAAIrB,IAAI,CAAC,CAAC;IACtB,MAAMsB,WAAW,GAAG,EAAE;IAEtB,IAAI3C,KAAK,CAACwC,IAAI,CAAC,CAAC,EAAE;MAChBG,WAAW,CAACC,IAAI,CAAC;QACfhE,EAAE,EAAEO,QAAQ,CAACsD,MAAM,GAAGE,WAAW,CAACF,MAAM,GAAG,CAAC;QAC5CrD,IAAI,EAAE,GAAG;QACTC,IAAI,EAAEW,KAAK;QACXjB,KAAK,EAAE,IAAI;QACXO,IAAI,EAAEoD,GAAG,CAACG,WAAW,CAAC,CAAC;QACvBtD,IAAI,EAAE;MACR,CAAC,CAAC;IACJ;IAEA,IAAIW,KAAK,CAACuC,MAAM,EAAE;MAChBE,WAAW,CAACC,IAAI,CACd,GAAG1C,KAAK,CAAC4C,GAAG,CAAC,CAACC,CAAC,EAAEC,CAAC,MAAM;QACtBpE,EAAE,EAAEO,QAAQ,CAACsD,MAAM,GAAGE,WAAW,CAACF,MAAM,GAAGO,CAAC,GAAG,CAAC;QAChD5D,IAAI,EAAE,GAAG;QACTC,IAAI,EAAE,IAAI;QACVN,KAAK,EAAEkE,GAAG,CAACC,eAAe,CAACH,CAAC,CAAC;QAC7BzD,IAAI,EAAEoD,GAAG,CAACG,WAAW,CAAC,CAAC;QACvBtD,IAAI,EAAE;MACR,CAAC,CAAC,CACJ,CAAC;IACH;IAEA,MAAM4D,YAAY,GAAGxD,KAAK,CAACmD,GAAG,CAACM,IAAI,IACjCA,IAAI,CAACxE,EAAE,KAAKiB,aAAa,GACrB;MAAE,GAAGuD,IAAI;MAAEjE,QAAQ,EAAE,CAAC,GAAGiE,IAAI,CAACjE,QAAQ,EAAE,GAAGwD,WAAW;IAAE,CAAC,GACzDS,IACN,CAAC;IAEDxD,QAAQ,CAACuD,YAAY,CAAC;IACtBpD,WAAW,CAACsD,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAE,GAAGV,WAAW,CAAC,CAAC;IAC9C1C,QAAQ,CAAC,EAAE,CAAC;IACZE,QAAQ,CAAC,EAAE,CAAC;EACd,CAAC;EAED,MAAMmD,aAAa,GAAIC,CAAC,IAAK;IAC3B,IAAIA,CAAC,CAACC,GAAG,KAAK,OAAO,EAAEjB,UAAU,CAAC,CAAC;EACrC,CAAC;EAED,MAAMkB,kBAAkB,GAAIF,CAAC,IAAK;IAChC,MAAMG,SAAS,GAAGH,CAAC,CAACI,MAAM,CAACC,KAAK;IAChC,MAAMlB,GAAG,GAAG,IAAIrB,IAAI,CAAC,CAAC;IACtB,MAAMwC,aAAa,GAAG;MACpBjF,EAAE,EAAEO,QAAQ,CAACsD,MAAM,GAAG,CAAC;MACvBrD,IAAI,EAAE,KAAK;MACXC,IAAI,EAAE,IAAIqB,WAAW,CAAC7B,IAAI,WAAW6E,SAAS,gBAAgB;MAC9DpE,IAAI,EAAEoD,GAAG,CAACG,WAAW,CAAC,CAAC;MACvBtD,IAAI,EAAE;IACR,CAAC;IAED,MAAM4D,YAAY,GAAGxD,KAAK,CAACmD,GAAG,CAACM,IAAI,IACjCA,IAAI,CAACxE,EAAE,KAAKiB,aAAa,GACrB;MAAE,GAAGuD,IAAI;MAAEpE,MAAM,EAAE0E,SAAS;MAAEvE,QAAQ,EAAE,CAAC,GAAGiE,IAAI,CAACjE,QAAQ,EAAE0E,aAAa;IAAE,CAAC,GAC3ET,IACN,CAAC;IAEDxD,QAAQ,CAACuD,YAAY,CAAC;IACtBpD,WAAW,CAACoD,YAAY,CAACxC,IAAI,CAACC,CAAC,IAAIA,CAAC,CAAChC,EAAE,KAAKiB,aAAa,CAAC,CAACV,QAAQ,CAAC;EACtE,CAAC;EAED,MAAM2E,oBAAoB,GAAGA,CAAA,KAAM;IACjC,IAAI,CAAC7E,YAAY,IAAI,CAACC,aAAa,EAAE;MACnC6E,KAAK,CAAC,gBAAgB,CAAC;MACvB;IACF;IAEA,MAAMrB,GAAG,GAAG,IAAIrB,IAAI,CAAC,CAAC;IACtB,MAAM2C,YAAY,GAAGC,kBAAkB,CAAC/E,aAAa,CAAC;IACtD,MAAMgF,MAAM,GAAG,iCAAiCF,YAAY,eAAe;IAC3E,MAAMG,iBAAiB,GAAGlF,YAAY,CAACmF,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC,CAACC,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC;IAErE,MAAMC,eAAe,GAAG;MACtB1F,EAAE,EAAEO,QAAQ,CAACsD,MAAM,GAAG,CAAC;MACvBrD,IAAI,EAAE,GAAG;MACT0D,GAAG,EAAEoB,MAAM;MACXK,gBAAgB,EAAEJ,iBAAiB;MACnCjF,aAAa,EAAEA,aAAa;MAC5BI,IAAI,EAAEoD,GAAG,CAACG,WAAW,CAAC,CAAC;MACvBtD,IAAI,EAAE;IACR,CAAC;IAED,MAAMiF,aAAa,GAAG;MACpB5F,EAAE,EAAEO,QAAQ,CAACsD,MAAM,GAAG,CAAC;MACvBrD,IAAI,EAAE,KAAK;MACXC,IAAI,EAAE,IAAIqB,WAAW,CAAC7B,IAAI,4BAA4B;MACtDS,IAAI,EAAEoD,GAAG,CAACG,WAAW,CAAC,CAAC;MACvBtD,IAAI,EAAE;IACR,CAAC;IAED,MAAM4D,YAAY,GAAGxD,KAAK,CAACmD,GAAG,CAACM,IAAI,IACjCA,IAAI,CAACxE,EAAE,KAAKiB,aAAa,GACrB;MACE,GAAGuD,IAAI;MACPjE,QAAQ,EAAE,CAAC,GAAGiE,IAAI,CAACjE,QAAQ,EAAEmF,eAAe,EAAEE,aAAa,CAAC;MAC5DvF,YAAY;MACZC,aAAa;MACbF,MAAM,EAAE;IACV,CAAC,GACDoE,IACN,CAAC;IAEDxD,QAAQ,CAACuD,YAAY,CAAC;IACtBpD,WAAW,CAACoD,YAAY,CAACxC,IAAI,CAACC,CAAC,IAAIA,CAAC,CAAChC,EAAE,KAAKiB,aAAa,CAAC,CAACV,QAAQ,CAAC;IACpEkB,mBAAmB,CAAC,KAAK,CAAC;IAC1BC,eAAe,CAAC,EAAE,CAAC;IACnBC,gBAAgB,CAAC,EAAE,CAAC;EACtB,CAAC;EAED,MAAMkE,oBAAoB,GAAGA,CAAA,KAAM;IACjC,MAAM/B,GAAG,GAAG,IAAIrB,IAAI,CAAC,CAAC;IACtB,MAAMqD,cAAc,GAAG,CACrB;MACE9F,EAAE,EAAEO,QAAQ,CAACsD,MAAM,GAAG,CAAC;MACvBrD,IAAI,EAAE,KAAK;MACXC,IAAI,EAAE,cAAc;MACpBC,IAAI,EAAEoD,GAAG,CAACG,WAAW,CAAC,CAAC;MACvBtD,IAAI,EAAE;IACR,CAAC,EACD;MACEX,EAAE,EAAEO,QAAQ,CAACsD,MAAM,GAAG,CAAC;MACvBrD,IAAI,EAAE,KAAK;MACXC,IAAI,EAAE,IAAIqB,WAAW,CAAC7B,IAAI,4BAA4B;MACtDS,IAAI,EAAEoD,GAAG,CAACG,WAAW,CAAC,CAAC;MACvBtD,IAAI,EAAE;IACR,CAAC,CACF;IAED,MAAM4D,YAAY,GAAGxD,KAAK,CAACmD,GAAG,CAACM,IAAI,IACjCA,IAAI,CAACxE,EAAE,KAAKiB,aAAa,GACrB;MACE,GAAGuD,IAAI;MACPjE,QAAQ,EAAE,CAAC,GAAGiE,IAAI,CAACjE,QAAQ,CAACwF,MAAM,CAACC,GAAG,IAAI,CAACA,GAAG,CAAC9B,GAAG,CAAC,EAAE,GAAG4B,cAAc,CAAC;MACvEzF,YAAY,EAAE,EAAE;MAChBC,aAAa,EAAE,EAAE;MACjBF,MAAM,EAAE;IACV,CAAC,GACDoE,IACN,CAAC;IAEDxD,QAAQ,CAACuD,YAAY,CAAC;IACtBpD,WAAW,CAACoD,YAAY,CAACxC,IAAI,CAACC,CAAC,IAAIA,CAAC,CAAChC,EAAE,KAAKiB,aAAa,CAAC,CAACV,QAAQ,CAAC;EACtE,CAAC;EAED,oBACET,OAAA;IAAKmG,SAAS,EAAC,oBAAoB;IAAAC,QAAA,gBACjCpG,OAAA;MAAKmG,SAAS,EAAC,cAAc;MAAAC,QAAA,gBAC3BpG,OAAA;QAAKmG,SAAS,EAAC,WAAW;QAACE,OAAO,EAAEA,CAAA,KAAMrF,QAAQ,CAAC,OAAO,CAAE;QAAAoF,QAAA,gBAC1DpG,OAAA;UAAMmG,SAAS,EAAC,OAAO;UAAAC,QAAA,EAAC;QAAI;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eAAAzG,OAAA;UAAMmG,SAAS,EAAC,gBAAgB;UAAAC,QAAA,EAAC;QAAK;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7E,CAAC,EACLxF,KAAK,CAACmD,GAAG,CAACM,IAAI,iBACb1E,OAAA;QAAmBmG,SAAS,EAAE,aAAazB,IAAI,CAACxE,EAAE,KAAKiB,aAAa,GAAG,QAAQ,GAAG,EAAE,EAAG;QACrFkF,OAAO,EAAEA,CAAA,KAAMjF,gBAAgB,CAACsD,IAAI,CAACxE,EAAE,CAAE;QAAAkG,QAAA,gBACzCpG,OAAA;UAAAoG,QAAA,EAAS1B,IAAI,CAACtE;QAAK;UAAAkG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAS,CAAC,eAAAzG,OAAA;UAAAsG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,EAClC/B,IAAI,CAACvE,IAAI,eAACH,OAAA;UAAAsG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,kBACb,EAAC/B,IAAI,CAACpE,MAAM;MAAA,GAJRoE,IAAI,CAACxE,EAAE;QAAAoG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKZ,CACN,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eAENzG,OAAA;MAAKmG,SAAS,EAAC,WAAW;MAAAC,QAAA,gBACxBpG,OAAA;QAAKmG,SAAS,EAAC,aAAa;QAAAC,QAAA,gBAC1BpG,OAAA;UAAK0G,GAAG,EAAE1E,WAAW,CAAC3B,KAAM;UAACsG,GAAG,EAAC,cAAI;UAACR,SAAS,EAAC;QAAa;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAChEzG,OAAA;UAAKmG,SAAS,EAAC,WAAW;UAAAC,QAAA,gBACxBpG,OAAA;YAAKmG,SAAS,EAAC,OAAO;YAAAC,QAAA,EAAEpE,WAAW,CAAC5B;UAAK;YAAAkG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eAChDzG,OAAA;YAAKmG,SAAS,EAAC,OAAO;YAAAC,QAAA,EAAEpE,WAAW,CAAC7B;UAAI;YAAAmG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,EAC9CzE,WAAW,CAACzB,YAAY,IAAIyB,WAAW,CAACxB,aAAa,iBACpDR,OAAA;YAAKmG,SAAS,EAAC,UAAU;YAAAC,QAAA,GAAC,eACrB,EAACpE,WAAW,CAACzB,YAAY,CAACmF,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC,CAACC,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,EAAC,qBAAM,EAAC3D,WAAW,CAACxB,aAAa,eAC5FR,OAAA;cAAQqG,OAAO,EAAEN,oBAAqB;cAAAK,QAAA,EAAC;YAAI;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACjD,CACN;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC,eACNzG,OAAA;UAAKmG,SAAS,EAAC,gBAAgB;UAAAC,QAAA,EAC5B,CAAC,KAAK,EAAE,KAAK,EAAE,MAAM,CAAC,CAAChC,GAAG,CAAC9D,MAAM,iBAChCN,OAAA;YACEqG,OAAO,EAAEA,CAAA,KAAMtB,kBAAkB,CAAC;cAAEE,MAAM,EAAE;gBAAEC,KAAK,EAAE5E;cAAO;YAAE,CAAC,CAAE;YACjE6F,SAAS,EAAEnE,WAAW,CAAC1B,MAAM,KAAKA,MAAM,GAAG,QAAQ,GAAG,EAAG;YAAA8F,QAAA,EACxD9F;UAAM,GAHIA,MAAM;YAAAgG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAIX,CACT;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eAENzG,OAAA;QAAKmG,SAAS,EAAC,eAAe;QAAAC,QAAA,GAC3B3F,QAAQ,CAAC2D,GAAG,CAAC,CAAC8B,GAAG,EAAEU,GAAG,KAAK;UAC1B,MAAMC,OAAO,GAAGD,GAAG,GAAG,CAAC,GAAGnG,QAAQ,CAACmG,GAAG,GAAG,CAAC,CAAC,GAAG,IAAI;UAClD,MAAME,OAAO,GAAGF,GAAG,GAAGnG,QAAQ,CAACsD,MAAM,GAAG,CAAC,GAAGtD,QAAQ,CAACmG,GAAG,GAAG,CAAC,CAAC,GAAG,IAAI;UACpE,MAAMG,QAAQ,GAAGvD,cAAc,CAAC0C,GAAG,CAACtF,IAAI,EAAEiG,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEjG,IAAI,CAAC;UACxD,MAAMoG,iBAAiB,GAAG,CAACF,OAAO,IAAI7D,UAAU,CAAC6D,OAAO,CAAClG,IAAI,CAAC,KAAKqC,UAAU,CAACiD,GAAG,CAACtF,IAAI,CAAC;UAEvF,oBACEZ,OAAA;YAAAoG,QAAA,GACGW,QAAQ,iBAAI/G,OAAA;cAAKmG,SAAS,EAAC,YAAY;cAAAC,QAAA,EAAE5D,eAAe,CAAC0D,GAAG,CAACtF,IAAI;YAAC;cAAA0F,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,eAC1EzG,OAAA;cAAKmG,SAAS,EAAE,WAAWD,GAAG,CAACrF,IAAI,GAAG,IAAI,GAAG,OAAO,EAAG;cAAAuF,QAAA,GACpDF,GAAG,CAACvF,IAAI,iBAAIX,OAAA;gBAAKmG,SAAS,EAAC,MAAM;gBAAAC,QAAA,EAAEF,GAAG,CAACvF;cAAI;gBAAA2F,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAAC,EAClDP,GAAG,CAAC7F,KAAK,iBAAIL,OAAA;gBAAK0G,GAAG,EAAER,GAAG,CAAC7F,KAAM;gBAACsG,GAAG,EAAC,cAAI;gBAACR,SAAS,EAAC;cAAO;gBAAAG,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAC,EAC/DP,GAAG,CAAC9B,GAAG,iBACNpE,OAAA;gBAAKmG,SAAS,EAAC,eAAe;gBAAAC,QAAA,gBAC5BpG,OAAA;kBAAQiH,KAAK,EAAC,cAAI;kBAACP,GAAG,EAAER,GAAG,CAAC9B,GAAI;kBAAC8C,eAAe;kBAACC,OAAO,EAAC;gBAAM;kBAAAb,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAE,CAAC,eAClEzG,OAAA;kBAAKmG,SAAS,EAAC,UAAU;kBAAAC,QAAA,GAAC,eAAG,EAACF,GAAG,CAACL,gBAAgB,EAAC,qBAAM,EAACK,GAAG,CAAC1F,aAAa;gBAAA;kBAAA8F,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAM,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC/E,CACN,EACAO,iBAAiB,iBAAIhH,OAAA;gBAAKmG,SAAS,EAAC,WAAW;gBAAAC,QAAA,EAAEnD,UAAU,CAACiD,GAAG,CAACtF,IAAI;cAAC;gBAAA0F,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC1E,CAAC;UAAA,GAZEP,GAAG,CAAChG,EAAE;YAAAoG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAaX,CAAC;QAEV,CAAC,CAAC,eACFzG,OAAA;UAAKoH,GAAG,EAAErF;QAAU;UAAAuE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpB,CAAC,EAEL/E,gBAAgB,iBACf1B,OAAA;QAAKmG,SAAS,EAAC,eAAe;QAAAC,QAAA,gBAC5BpG,OAAA;UAAOqH,IAAI,EAAC,gBAAgB;UAACnC,KAAK,EAAE3E,YAAa;UAAC+G,QAAQ,EAAGzC,CAAC,IAAKjD,eAAe,CAACiD,CAAC,CAACI,MAAM,CAACC,KAAK;QAAE;UAAAoB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACtGzG,OAAA;UAAOqH,IAAI,EAAC,MAAM;UAACnC,KAAK,EAAE1E,aAAc;UAAC+G,WAAW,EAAC,2BAAO;UAACD,QAAQ,EAAGzC,CAAC,IAAKhD,gBAAgB,CAACgD,CAAC,CAACI,MAAM,CAACC,KAAK;QAAE;UAAAoB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAClHzG,OAAA;UAAQqG,OAAO,EAAEjB,oBAAqB;UAAAgB,QAAA,EAAC;QAAE;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/C,CACN,eAEDzG,OAAA;QAAKmG,SAAS,EAAC,YAAY;QAAAC,QAAA,gBACzBpG,OAAA;UAAQqG,OAAO,EAAEA,CAAA,KAAM1E,mBAAmB,CAACgD,IAAI,IAAI,CAACA,IAAI,CAAE;UAAAyB,QAAA,EAAC;QAAE;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACtEzG,OAAA;UAAOqH,IAAI,EAAC,MAAM;UAACnC,KAAK,EAAE5D,KAAM;UAACiG,WAAW,EAAC,iCAAQ;UAACD,QAAQ,EAAGzC,CAAC,IAAKtD,QAAQ,CAACsD,CAAC,CAACI,MAAM,CAACC,KAAK,CAAE;UAACsC,SAAS,EAAE5C;QAAc;UAAA0B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAC7HzG,OAAA;UAAQqG,OAAO,EAAEA,CAAA,KAAMvE,OAAO,CAACO,OAAO,CAACoF,KAAK,CAAC,CAAE;UAAArB,QAAA,EAAC;QAAE;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAC3DzG,OAAA;UAAOqH,IAAI,EAAC,MAAM;UAACD,GAAG,EAAEtF,OAAQ;UAAC4F,KAAK,EAAE;YAAEC,OAAO,EAAE;UAAO,CAAE;UAACC,QAAQ;UACnEN,QAAQ,EAAGzC,CAAC,IAAK;YACf,MAAMgD,QAAQ,GAAGC,KAAK,CAACC,IAAI,CAAClD,CAAC,CAACI,MAAM,CAACzD,KAAK,CAAC;YAC3C,IAAIqG,QAAQ,CAAC9D,MAAM,EAAEtC,QAAQ,CAACoG,QAAQ,CAAC;YACvC/F,OAAO,CAACO,OAAO,CAAC6C,KAAK,GAAG,IAAI;UAC9B;QAAE;UAAAoB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACPzG,OAAA;UAAQqG,OAAO,EAAExC,UAAW;UAAAuC,QAAA,EAAC;QAAE;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAAC1F,EAAA,CA5RQD,QAAQ;EAAA,QACEhB,WAAW;AAAA;AAAAkI,EAAA,GADrBlH,QAAQ;AA8RjB,eAAeA,QAAQ;AAAC,IAAAkH,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}